const uri="http://directory.aidanklee.co.uk/api/",requestingEvent=new Event("requesting"),fulfilledEvent=new Event("fulfilled"),errorEvent=new Event("error");class Controller extends EventTarget{_requesting=!1;_requests=[];constructor(){super()}setRequesting(e){if("boolean"!=typeof e)throw new Error("Requesting must be of type boolean.");this._requesting=e}async request(e){const t=new Pajax(e);this.addRequest(t);const r=await t.fetch();return this.removeRequest(t),r.data}addRequest(e){if(0===this._requests.length){const e=new Event("requesting");this.dispatchEvent(e),this.setRequesting(!0)}this._requests.push(e)}removeRequest(e){if(this._requests=this._requests.filter((t=>t!==e)),0===this._requests.length){const e=new Event("fulfilled");this.setRequesting(!1),this.dispatchEvent(e)}}handleRequesting(e){this._onRequesting.forEach((t=>t(e)))}handleFulfilled(e){this._onFulfilled.forEach((t=>t(e)))}async getEmployees(){return await this.request({url:`${uri}employees.php`})}async getEmployeeById(e){return await this.request({url:`${uri}employees.php`,data:{id:e}})}async addEmployee(e){return await this.request({url:`${uri}employees.php`,data:e,type:"POST"})}async editEmployee(e){return await this.request({url:`${uri}employees.php`,data:e,type:"PUT"})}async deleteEmployee(e){return await this.request({url:`${uri}employees.php`,data:{id:e},type:"DELETE"})}async getDepartments(){return await this.request({url:`${uri}departments.php`})}async getDepartmentById(e){return await this.request({url:`${uri}departments.php`,data:{id:e}})}async addDepartment(e){return await this.request({url:`${uri}departments.php`,data:e,type:"POST"})}async editDepartment(e){return await this.request({url:`${uri}departments.php`,data:e,type:"PUT"})}async deleteDepartment(e){return await this.request({url:`${uri}departments.php`,data:{id:e},type:"DELETE"})}async getLocations(){return await this.request({url:`${uri}locations.php`})}async getLocationById(e){return await this.request({url:`${uri}locations.php`,data:{id:e}})}async addLocation(e){return await this.request({url:`${uri}locations.php`,data:e,type:"POST"})}async editLocation(e){return await this.request({url:`${uri}locations.php`,data:e,type:"PUT"})}async deleteLocation(e){return await this.request({url:`${uri}locations.php`,data:{id:e},type:"DELETE"})}}class Pajax extends EventTarget{_params=null;_requesting=!1;_error=!1;_onRequesting=[()=>this.setRequesting(!0)];_onFulfilled=[()=>this.setRequesting(!1)];_onError=[()=>this.setRequesting(!1)];constructor(e){super(),this._params=e,this.addEventListener("requesting",this.handleRequesting.bind(this)),this.addEventListener("fulfilled",this.handleFulfilled.bind(this)),this.addEventListener("error",this.handleError.bind(this))}get requesting(){return this._requesting}setRequesting(e){if("boolean"!=typeof e)throw new Error("Requesting must be of type boolean.");this._requesting=e}handleRequesting(e){this._onRequesting.forEach((t=>t(e)))}handleFulfilled(e){this._onFulfilled.forEach((t=>t(e)))}handleError(e){this._onError.forEach((t=>t(e)))}pajax({url:e,type:t="GET",dataType:r="json",data:s}){return new Promise((a=>{this.dispatchEvent(requestingEvent),$.ajax({url:e,type:t,dataType:r,data:s,success:e=>{this.dispatchEvent(fulfilledEvent),a(e)},error:(e,t,r)=>{errorEvent.error={jqXHR:e,textStatus:t,err:r},console.error(errorEvent),this.dispatchEvent(errorEvent)}})}))}async fetch(){return await this.pajax(this._params)}}export default new Controller;
