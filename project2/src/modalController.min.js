import{App}from"./app.min.js";import{Department,Employee,Location}from"./dataTypes.min.js";class ModalController{_app=null;_forms=[];_selectedForm=0;_selectedRow=0;_modal=null;_table=null;_type=null;_bs=null;_buttons={};_isEditied=!1;constructor(e,t){this.setApp(e),this.setModal(t),this.setForms(this.modal.querySelectorAll("form")),["#edit","#delete","#prev","#next"].forEach((e=>this.setButton(e))),this.forms.forEach((e=>{e.addEventListener("input",(e=>this.setIsEdited(!0)))})),this.buttons.delete.addEventListener("click",this.handleDelete.bind(this)),this.run()}get app(){return this._app}setApp(e){if(!(e instanceof App))throw new Error("The modal controllers app must be an instance of App.");this._app=e}get forms(){return this._forms}setForms(e){Array.from(e).forEach((e=>{if(!(e instanceof HTMLFormElement))throw new Error("All forms must be instances of a HTMLFormElement.");this._forms.push(e)}))}get selectedForm(){return this._selectedForm}setSelectedForm(e){this._selectedForm=e}get bs(){return this._bs}get modal(){return this._modal}setModal(e){const t=document.querySelector(e);if(!(t instanceof HTMLElement))throw new Error("The modal needs to be a valid HTML element.");this._modal=t,this._bs=new bootstrap.Modal(this.modal,{backdrop:"static"})}get buttons(){return this._buttons}setButton(e){this._buttons[e.slice(1)]=this.modal.querySelector(e)}get isEditied(){return this._isEditied}setIsEdited(e){this._isEditied=e,this.modal.querySelector("#modal-submit").disabled=!1}get selectedRow(){return this._selectedRow}get type(){return this._type}setType(e){this._type=e}get table(){return this._table}setTable(e){this._table=e}setSelectedRow(e){if("function"==typeof e)this._selectedRow=e(this._selectedRow,this.app._selectedRows);else{if("number"!=typeof e)throw new Error("You can only set the selected row using a function of a number");this._selectedRow=e}}insertSelectedRow(){const e=Array.from(this.forms[this.selectedForm].querySelectorAll("input, select"));this.modal.querySelector(".data-id").value=`#${this.app._selectedRows[this.selectedRow]._data._id}`,e.forEach((e=>{const t=e.getAttribute("name"),s=this.app._selectedRows[this.selectedRow].data[`_${t}`];e.value=s}))}disableButtons(){this.modal.classList.remove("editing");for(let e in this.buttons)this.buttons[e].disabled=!0}toggleReadOnly(e){const t=Array.from(this.modal.querySelectorAll("input, select"));e?(this.modal.classList.remove("editing"),t.forEach((e=>e.disabled=!0))):(this.modal.classList.add("editing"),t.forEach((e=>{"employees"===this.app._selectedTable&&"location"===e.name||(e.disabled=!1)})))}handleClose(e){this.handleWarn("close",this.bs.hide.bind(this.bs))}getLocationByName(e){return this.app._locations.list.filter((t=>t.name===e))[0]}getDepartmentByName(e){return this.app._departments.list.filter((t=>t.name===e))[0]}async handleDelete(){this.handleWarn("delete",(async()=>{let e=[...this.app._selectedRows],t={...this.app._selectedRows[this.selectedRow]};const s=Number(this.app._selectedRows[this.selectedRow].data.id);"employees"===this.table?await Employee.delete(s):"departments"===this.table?await Department.delete(s):"locations"===this.table&&await Location.delete(s),await this.app.getData(),this.app.tableSelect(this.app._selectedTable),1===e.length?this.bs.hide():this.handleMultiSubmitDelete(e,t),this.setIsEdited(!1)}))}async handleSubmit(e){const t=new FormData(this.forms[this.selectedForm]),s=this.parseForm(t),i="employees"===this.table?Employee:"departments"===this.table?Department:Location;let l,a;if(this.forms[this.selectedForm].reportValidity())try{"add"===this.type?(delete s.id,await i.add(s)):"edit"===this.type&&(l=[...this.app._selectedRows],a={...this.app._selectedRows[this.selectedRow]},await i.edit(s)),await this.app.getData(),this.app.tableSelect(this.app._selectedTable),"add"===this.type||"edit"===this.type&&1===l.length?this.bs.hide():this.handleMultiSubmitDelete(l,a),this.setIsEdited(!1)}catch(e){console.error(e)}}parseForm(e){const t={};for(let[s,i]of e)"department"===s&&(s+="ID",i=this.getDepartmentByName(i).id),"location"===s&&(s+="ID",i=this.getLocationByName(i).id),t[s]=i;return t}handleMultiSubmitDelete(e,t){this.app._selectedRows=this.app._table._body.rows.filter((t=>e.findIndex((e=>e._data.id===t._data.id))>=0)),this.app._selectedRows=this.app._selectedRows.filter((e=>e._data.id!==t._data.id&&(e.ctrlClick(),!0))),this.selectedRow===this.app._selectedRows.length&&this.setSelectedRow(this.app._selectedRows.length-1),1===this.app._selectedRows.length&&(this.buttons.next.disabled=!0,this.buttons.prev.disabled=!0),this.insertSelectedRow()}handleWarn(e,t,s=!1){const i=document.querySelector("header"),l=document.querySelector("main"),a=document.getElementById("change-handler"),d=bootstrap.Toast.getOrCreateInstance(a,{autohide:!1}),o=a.querySelector(".btn-danger"),n=a.querySelector(".btn-secondary");o.classList.remove("none");const r=()=>{this.modal.classList.remove("disabled"),i.classList.remove("disabled"),l.classList.remove("disabled"),d.hide()},h=()=>{o.removeEventListener("click",c),n.removeEventListener("click",p)},c=e=>{this.setIsEdited(!1),r(),t(),h()},p=e=>{r(),h()},m=(e,t,s)=>{t||o.classList.add("none"),this.modal.classList.add("disabled"),i.classList.add("disabled"),l.classList.add("disabled"),o.addEventListener("click",c),n.addEventListener("click",p),e.childNodes[0].firstChild.nodeValue=s,d.show()};if("delete"===e&&("departments"===this._app._selectedTable||"locations"===this._app._selectedTable))if("departments"===this._app._selectedTable){if(s){if(this._app._selectedRows.findIndex((e=>e.data.hasEmployees()))>=0)return void m(a,!1,"You cannot delete a department if it still contains employees.")}else if(this.app._selectedRows[this.selectedRow].data.hasEmployees())return void m(a,!1,"You cannot delete a department if it still contains employees.")}else if("locations"===this._app._selectedTable)if(s){if(this._app._selectedRows.findIndex((e=>e.data.hasDepartments()))>=0)return void m(a,!1,"You cannot delete a location if it still has departments.")}else if(this.app._selectedRows[this.selectedRow].data.hasDepartments())return void m(a,!1,"You cannot delete a location if it still has departments.");this.isEditied&&"close"===e||"delete"===e?"delete"===e&&s?m(a,!0,`Are you sure you want to delete these ${this._app._selectedTable}?`):"delete"===e?m(a,!0,`Are you sure you want to delete this ${this._app._selectedTable.slice(0,this._app._selectedTable.length-1)}?`):"close"===e&&m(a,!0,"You will lose any unsaved changes. Are you sure you want to proceed?"):t()}handleModalShow(e){const t=e.target.getAttribute("data-bs-type");let[s,i,l]=t.split("-");i+="s",this.setType(s),this.setTable(i),this.disableButtons(),this.setSelectedRow(0),this.setSelectedForm(this.forms.findIndex((e=>e.getAttribute("id")===i))),this.forms.forEach((e=>e.remove())),this.modal.querySelector(".modal-body").prepend(this.forms[this.selectedForm]),this.modal.querySelector(".data-id").value="",this.app.insertFormOptions(),this.modal.querySelector("#modal-submit").disabled=!0,"add"===s&&(Array.from(this.modal.querySelectorAll("input, select")).forEach((e=>{e instanceof HTMLInputElement?e.value="":e.value=e.firstChild.value})),this.toggleReadOnly(!1)),"edit"===s&&(this.insertSelectedRow(l),l?this.toggleReadOnly(!0):this.toggleReadOnly(!1),this.buttons.edit.disabled=!1,this.buttons.delete.disabled=!1,this.app._selectedRows.length>1&&(this.buttons.prev.disabled=!1,this.buttons.next.disabled=!1))}run(){this.buttons.next.addEventListener("click",(e=>{this.handleWarn("close",(()=>{this.setSelectedRow.bind(this)(((e,t)=>e+1===t.length?0:e+1)),this.insertSelectedRow()}).bind(this))})),this.buttons.prev.addEventListener("click",(e=>{this.handleWarn("close",(()=>{this.setSelectedRow.bind(this)(((e,t)=>e-1<0?t.length-1:e-1)),this.insertSelectedRow()}).bind(this))})),this.buttons.edit.addEventListener("click",(e=>{this.modal.classList.contains("editing")?this.toggleReadOnly(!0):this.toggleReadOnly(!1)})),this.modal.querySelector("#modal-submit").addEventListener("click",this.handleSubmit.bind(this)),this.modal.querySelector("#modal-cancel").addEventListener("click",this.handleClose.bind(this)),this.modal.querySelector("#modal-close").addEventListener("click",this.handleClose.bind(this))}}export default ModalController;
